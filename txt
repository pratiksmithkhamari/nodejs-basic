in index.js page === 

for make cookie use res.cookie()
1)inside that we use the token or key with the cookie value 

2)and als0 we can use httpOnly:true which HttpOnly attribute is inaccessible to the JavaScript Document.cookie API; it's only sent to the server. 

3) so after that if in a website if the user have the cookie.token or it have coookie before we make a page for login and if he has cookie render the logout page
4) after that if the user logout we should delete the cookie value.

5) after that we use the next() method which is a middleware if the user login we call the next() method which loads the needed page.

6) _id importance role for hiding the details from browser and connetion to mongodb database

7)bcrypt.hash(): Utilize this function to generate a secure hash of a plaintext password. Accepts the plaintext password and an optional salt factor as input parameters, returning the hashed password asynchronously.

8)bcrypt.compare(): Employ this function to compare a plaintext password with its hashed counterpart. It facilitates secure authentication by verifying the equality of the plaintext password and the stored hashed password.